digraph G {
1 [label="(202145241)=" shape=box style=dashed]
2 [label="(202145213)For" shape=diamond style=dashed]
3 [label="(202145286)TextIO(outf)" shape=ellipse style=dashed color=red fontcolor=red]
4 [label="(202145246)If" shape=diamond style=dashed]
5 [label="(202145217)String(lit(x =))" shape=ellipse style=dashed]
6 [label="(202145249)str(line)" shape=ellipse style=dashed]
7 [label="(202145266)empty" shape=box style=dashed]
8 [label="(202145292)=" shape=box style=dashed color=red fontcolor=red]
9 [label="(202145270)If" shape=diamond style=dashed]
10 [label="(202145258)open" shape=box style=dashed color=blue fontcolor=blue]
11 [label="(202145255)=" shape=box style=dashed]
12 [label="(202145308)comprehension" shape=diamond style=dashed]
13 [label="(202145275)split" shape=box style=dashed]
14 [label="(202145261)=" shape=box style=dashed color=blue fontcolor=blue]
15 [label="(202145299)For" shape=diamond style=dashed]
16 [label="(202145223)split" shape=box style=dashed]
17 [label="(202145276)String(lit(=))" shape=ellipse style=dashed]
18 [label="(202145225)str.split()[.](Subscript)" shape=ellipse style=dashed]
19 [label="(202145257)TextIO(iny)" shape=ellipse style=dashed color=blue fontcolor=blue]
20 [label="(202145277)str.split()[.](Subscript)" shape=ellipse style=dashed]
21 [label="(202145303)String(lit(,))" shape=ellipse style=dashed]
22 [label="(202145288)str(case)" shape=ellipse style=dashed]
23 [label="(202145248)str(aux)" shape=ellipse style=dashed]
24 [label="(202145267)str(line)" shape=ellipse style=dashed]
25 [label="(202145203)=" shape=box style=dashed]
26 [label="(202145307)List[Union[int, float]](e)" shape=ellipse style=dashed]
27 [label="(202145312)String(lit(
))" shape=ellipse style=dashed]
28 [label="(202145301)TextIO(outf)" shape=ellipse style=dashed]
29 [label="(202145291)String(lit(w))" shape=ellipse style=dashed color=red fontcolor=red]
30 [label="(202145250)split" shape=box style=dashed]
31 [label="(202145222)str(line)" shape=ellipse style=dashed]
32 [label="(202145264)str(line)" shape=ellipse style=dashed]
33 [label="(202145265)For" shape=diamond style=dashed]
34 [label="(202145290)Add" shape=box style=dashed]
35 [label="(202145279)=" shape=box style=dashed]
36 [label="(202145220)float(x)" shape=ellipse style=dashed]
37 [label="(202145289)String(lit(.csv))" shape=ellipse style=dashed]
38 [label="(202145316)END" style=dashed]
39 [label="(202145269)String(lit(y =))" shape=ellipse style=dashed]
40 [label="(202145305)GeneratorExp" shape=diamond style=dashed]
41 [label="(202145296)List[List[Union[int, float]]](dat)" shape=ellipse style=dashed]
42 [label="(202145205)TextIO(inx)" shape=ellipse style=dashed color=red fontcolor=red]
43 [label="(202145273)float" shape=box style=dashed]
44 [label="(202145294)writelines" shape=box style=dashed]
45 [label="(202145226)number(1)" shape=ellipse style=dashed]
46 [label="(202145314)TextIO(outf)" shape=ellipse style=dashed color=red fontcolor=red]
47 [label="(202145201)Optional[str](xin)" shape=ellipse style=dashed]
48 [label="(202145221)float" shape=box style=dashed]
49 [label="(202145219)empty" shape=box style=dashed]
50 [label="(202145310)Union[int, float](i)" shape=ellipse style=dashed]
51 [label="(202145214)empty" shape=box style=dashed]
52 [label="(202145215)str(line)" shape=ellipse style=dashed]
53 [label="(202145315)close" shape=box style=dashed color=red fontcolor=red]
54 [label="(202145311)empty" shape=box style=dashed]
55 [label="(202145253)number(1)" shape=ellipse style=dashed]
56 [label="(202145295)String(lit(step,i,j,x,y,poly
))" shape=ellipse style=dashed]
57 [label="(202145302)writelines" shape=box style=dashed]
58 [label="(202145235)str(line)" shape=ellipse style=dashed]
59 [label="(202145282)eval" shape=box style=dashed]
60 [label="(202145245)String(lit(auxfile =))" shape=ellipse style=dashed]
61 [label="(202145293)TextIO(outf)" shape=ellipse style=dashed]
62 [label="(202145304)join" shape=box style=dashed]
63 [label="(202145229)str(line)" shape=ellipse style=dashed]
64 [label="(202145280)empty" shape=box style=dashed]
65 [label="(202145285)=" shape=box style=dashed]
66 [label="(202145231)String(lit(case =))" shape=ellipse style=dashed]
67 [label="(202145233)empty" shape=box style=dashed]
68 [label="(202145298)List[Union[int, float]](e)" shape=ellipse style=dashed]
69 [label="(202145262)TextIO(iny)" shape=ellipse style=dashed]
70 [label="(202145251)String(lit(=))" shape=ellipse style=dashed]
71 [label="(202145271)empty" shape=box style=dashed]
72 [label="(202145272)float(y)" shape=ellipse style=dashed]
73 [label="(202145256)empty" shape=box style=dashed]
74 [label="(202145206)open" shape=box style=dashed color=red fontcolor=red]
75 [label="(202145224)String(lit(=))" shape=ellipse style=dashed]
76 [label="(202145284)float(y)" shape=ellipse style=dashed]
77 [label="(202145242)empty" shape=box style=dashed]
78 [label="(202145207)Optional[str](xin)" shape=ellipse style=dashed]
79 [label="(202145211)str(line)" shape=ellipse style=dashed]
80 [label="(202145274)str(line)" shape=ellipse style=dashed]
81 [label="(202145234)str(case)" shape=ellipse style=dashed]
82 [label="(202145263)str(line)" shape=ellipse style=dashed]
83 [label="(202145239)number(1)" shape=ellipse style=dashed]
84 [label="(202145202)(null)" shape=ellipse style=dashed]
85 [label="(202145260)String(lit(r))" shape=ellipse style=dashed color=blue fontcolor=blue]
86 [label="(202145309)str" shape=box style=dashed]
87 [label="(202145300)empty" shape=box style=dashed]
88 [label="(202145218)If" shape=diamond style=dashed]
89 [label="(202145244)startswith" shape=box style=dashed]
90 [label="(202145208)String(lit(r))" shape=ellipse style=dashed color=red fontcolor=red]
91 [label="(202145209)=" shape=box style=dashed color=red fontcolor=red]
92 [label="(202145210)TextIO(inx)" shape=ellipse style=dashed]
93 [label="(202145313)Add" shape=box style=dashed]
94 [label="(202145200)START" style=dashed]
95 [label="(202145281)List[List[Union[int, float]]](dat)" shape=ellipse style=dashed]
96 [label="(202145297)List[Union[int, float]](e)" shape=ellipse style=dashed]
97 [label="(202145237)String(lit(=))" shape=ellipse style=dashed]
98 [label="(202145228)empty" shape=box style=dashed]
99 [label="(202145259)str(aux)" shape=ellipse style=dashed]
100 [label="(202145212)str(line)" shape=ellipse style=dashed]
101 [label="(202145227)=" shape=box style=dashed]
102 [label="(202145283)float(x)" shape=ellipse style=dashed]
103 [label="(202145232)If" shape=diamond style=dashed]
104 [label="(202145252)str.split()[.](Subscript)" shape=ellipse style=dashed]
105 [label="(202145278)number(1)" shape=ellipse style=dashed]
106 [label="(202145230)startswith" shape=box style=dashed]
107 [label="(202145243)str(line)" shape=ellipse style=dashed]
108 [label="(202145306)Union[int, float](i)" shape=ellipse style=dashed]
109 [label="(202145247)empty" shape=box style=dashed]
110 [label="(202145236)split" shape=box style=dashed]
111 [label="(202145254)strip" shape=box style=dashed]
112 [label="(202145287)open" shape=box style=dashed color=red fontcolor=red]
113 [label="(202145216)startswith" shape=box style=dashed]
114 [label="(202145240)strip" shape=box style=dashed]
115 [label="(202145238)str.split()[.](Subscript)" shape=ellipse style=dashed]
116 [label="(202145268)startswith" shape=box style=dashed]
103 -> 1 [label="T"];
114 -> 1 [label="dep" style=dotted];
114 -> 1 [label="para" style=dotted];
94 -> 2 [label="" style=solid];
100 -> 2 [label="cond" style=dotted];
91 -> 2 [label="dep" style=dotted];
8 -> 3 [label="def" style=dotted];
103 -> 4 [label="F"];
89 -> 4 [label="dep" style=dotted];
89 -> 4 [label="cond" style=dotted];
79 -> 6 [label="ref" style=dotted];
33 -> 7 [label="" style=solid];
94 -> 8 [label="" style=solid];
112 -> 8 [label="dep" style=dotted];
112 -> 8 [label="para" style=dotted];
33 -> 9 [label="" style=solid];
116 -> 9 [label="dep" style=dotted];
116 -> 9 [label="cond" style=dotted];
94 -> 10 [label="" style=solid];
99 -> 10 [label="para" style=dotted];
85 -> 10 [label="para" style=dotted];
1 -> 10 [label="dep" style=dotted];
73 -> 10 [label="dep" style=dotted];
11 -> 10 [label="dep" style=dotted];
101 -> 10 [label="dep" style=dotted];
4 -> 11 [label="T"];
111 -> 11 [label="dep" style=dotted];
111 -> 11 [label="para" style=dotted];
15 -> 12 [label="" style=solid];
108 -> 12 [label="cond" style=dotted];
87 -> 12 [label="dep" style=dotted];
9 -> 13 [label="T"];
80 -> 13 [label="recv" style=dotted];
17 -> 13 [label="para" style=dotted];
71 -> 13 [label="dep" style=dotted];
94 -> 14 [label="" style=solid];
10 -> 14 [label="dep" style=dotted];
10 -> 14 [label="para" style=dotted];
94 -> 15 [label="" style=solid];
68 -> 15 [label="cond" style=dotted];
44 -> 15 [label="dep" style=dotted];
88 -> 16 [label="T"];
31 -> 16 [label="recv" style=dotted];
75 -> 16 [label="para" style=dotted];
49 -> 16 [label="dep" style=dotted];
16 -> 18 [label="qual" style=dotted];
45 -> 18 [label="para" style=dotted];
14 -> 19 [label="def" style=dotted];
13 -> 20 [label="qual" style=dotted];
105 -> 20 [label="para" style=dotted];
11 -> 23 [label="def" style=dotted];
82 -> 24 [label="ref" style=dotted];
94 -> 25 [label="" style=solid];
84 -> 25 [label="para" style=dotted];
96 -> 26 [label="ref" style=dotted];
3 -> 28 [label="ref" style=dotted];
4 -> 30 [label="T"];
6 -> 30 [label="recv" style=dotted];
70 -> 30 [label="para" style=dotted];
109 -> 30 [label="dep" style=dotted];
79 -> 31 [label="ref" style=dotted];
82 -> 32 [label="ref" style=dotted];
94 -> 33 [label="" style=solid];
32 -> 33 [label="cond" style=dotted];
14 -> 33 [label="dep" style=dotted];
94 -> 34 [label="" style=solid];
22 -> 34 [label="para" style=dotted];
37 -> 34 [label="para" style=dotted];
65 -> 34 [label="dep" style=dotted];
9 -> 35 [label="T"];
43 -> 35 [label="dep" style=dotted];
43 -> 35 [label="para" style=dotted];
101 -> 36 [label="def" style=dotted];
53 -> 38 [label="dep" style=dotted];
15 -> 40 [label="" style=solid];
86 -> 40 [label="dep" style=dotted];
86 -> 40 [label="cond" style=dotted];
54 -> 40 [label="dep" style=dotted];
54 -> 40 [label="para" style=dotted];
95 -> 41 [label="ref" style=dotted];
91 -> 42 [label="def" style=dotted];
9 -> 43 [label="T"];
20 -> 43 [label="para" style=dotted];
71 -> 43 [label="dep" style=dotted];
94 -> 44 [label="" style=solid];
61 -> 44 [label="recv" style=dotted];
56 -> 44 [label="para" style=dotted];
8 -> 44 [label="dep" style=dotted];
3 -> 46 [label="ref" style=dotted];
25 -> 47 [label="def" style=dotted];
88 -> 48 [label="T"];
18 -> 48 [label="para" style=dotted];
49 -> 48 [label="dep" style=dotted];
88 -> 49 [label="T"];
108 -> 50 [label="ref" style=dotted];
2 -> 51 [label="" style=solid];
79 -> 52 [label="ref" style=dotted];
94 -> 53 [label="" style=solid];
46 -> 53 [label="recv" style=dotted];
57 -> 53 [label="dep" style=dotted];
12 -> 54 [label="" style=solid];
15 -> 57 [label="" style=solid];
28 -> 57 [label="recv" style=dotted];
93 -> 57 [label="dep" style=dotted];
93 -> 57 [label="para" style=dotted];
87 -> 57 [label="dep" style=dotted];
79 -> 58 [label="ref" style=dotted];
94 -> 59 [label="" style=solid];
102 -> 59 [label="para" style=dotted];
76 -> 59 [label="para" style=dotted];
64 -> 59 [label="dep" style=dotted];
35 -> 59 [label="dep" style=dotted];
3 -> 61 [label="ref" style=dotted];
15 -> 62 [label="" style=solid];
21 -> 62 [label="recv" style=dotted];
40 -> 62 [label="dep" style=dotted];
40 -> 62 [label="para" style=dotted];
87 -> 62 [label="dep" style=dotted];
79 -> 63 [label="ref" style=dotted];
9 -> 64 [label="F"];
94 -> 65 [label="" style=solid];
59 -> 65 [label="dep" style=dotted];
59 -> 65 [label="para" style=dotted];
103 -> 67 [label="T"];
96 -> 68 [label="ref" style=dotted];
19 -> 69 [label="ref" style=dotted];
9 -> 71 [label="T"];
35 -> 72 [label="def" style=dotted];
4 -> 73 [label="F"];
94 -> 74 [label="" style=solid];
78 -> 74 [label="para" style=dotted];
90 -> 74 [label="para" style=dotted];
25 -> 74 [label="dep" style=dotted];
103 -> 77 [label="F"];
92 -> 79 [label="def" style=dotted];
82 -> 80 [label="ref" style=dotted];
1 -> 81 [label="def" style=dotted];
69 -> 82 [label="def" style=dotted];
15 -> 86 [label="" style=solid];
50 -> 86 [label="para" style=dotted];
12 -> 86 [label="dep" style=dotted];
15 -> 87 [label="" style=solid];
2 -> 88 [label="" style=solid];
113 -> 88 [label="dep" style=dotted];
113 -> 88 [label="cond" style=dotted];
103 -> 89 [label="F"];
107 -> 89 [label="recv" style=dotted];
60 -> 89 [label="para" style=dotted];
77 -> 89 [label="dep" style=dotted];
94 -> 91 [label="" style=solid];
74 -> 91 [label="dep" style=dotted];
74 -> 91 [label="para" style=dotted];
42 -> 92 [label="ref" style=dotted];
15 -> 93 [label="" style=solid];
62 -> 93 [label="dep" style=dotted];
62 -> 93 [label="para" style=dotted];
27 -> 93 [label="para" style=dotted];
87 -> 93 [label="dep" style=dotted];
65 -> 95 [label="def" style=dotted];
41 -> 96 [label="def" style=dotted];
88 -> 98 [label="F"];
79 -> 100 [label="ref" style=dotted];
88 -> 101 [label="T"];
48 -> 101 [label="dep" style=dotted];
48 -> 101 [label="para" style=dotted];
88 -> 103 [label="F"];
106 -> 103 [label="dep" style=dotted];
106 -> 103 [label="cond" style=dotted];
30 -> 104 [label="qual" style=dotted];
55 -> 104 [label="para" style=dotted];
88 -> 106 [label="F"];
63 -> 106 [label="recv" style=dotted];
66 -> 106 [label="para" style=dotted];
98 -> 106 [label="dep" style=dotted];
79 -> 107 [label="ref" style=dotted];
26 -> 108 [label="def" style=dotted];
4 -> 109 [label="T"];
103 -> 110 [label="T"];
58 -> 110 [label="recv" style=dotted];
97 -> 110 [label="para" style=dotted];
67 -> 110 [label="dep" style=dotted];
4 -> 111 [label="T"];
104 -> 111 [label="recv" style=dotted];
94 -> 112 [label="" style=solid];
34 -> 112 [label="dep" style=dotted];
34 -> 112 [label="para" style=dotted];
29 -> 112 [label="para" style=dotted];
65 -> 112 [label="dep" style=dotted];
2 -> 113 [label="" style=solid];
52 -> 113 [label="recv" style=dotted];
5 -> 113 [label="para" style=dotted];
51 -> 113 [label="dep" style=dotted];
103 -> 114 [label="T"];
115 -> 114 [label="recv" style=dotted];
110 -> 115 [label="qual" style=dotted];
83 -> 115 [label="para" style=dotted];
33 -> 116 [label="" style=solid];
24 -> 116 [label="recv" style=dotted];
39 -> 116 [label="para" style=dotted];
7 -> 116 [label="dep" style=dotted];
}