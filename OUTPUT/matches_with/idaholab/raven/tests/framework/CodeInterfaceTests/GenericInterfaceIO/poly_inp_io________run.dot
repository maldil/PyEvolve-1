digraph G {
1 [label="(202114472)empty" shape=box style=dashed]
2 [label="(202114542)float(y)" shape=ellipse style=dashed]
3 [label="(202114464)open" shape=box style=dashed color=blue fontcolor=blue]
4 [label="(202114496)str.split()[.](Subscript)" shape=ellipse style=dashed]
5 [label="(202114501)str(line)" shape=ellipse style=dashed]
6 [label="(202114530)float(y)" shape=ellipse style=dashed]
7 [label="(202114553)String(lit(step,i,j,x,y,poly
))" shape=ellipse style=dashed]
8 [label="(202114545)open" shape=box style=dashed color=red fontcolor=red]
9 [label="(202114538)empty" shape=box style=dashed]
10 [label="(202114540)eval" shape=box style=dashed]
11 [label="(202114572)TextIO(outf)" shape=ellipse style=dashed color=red fontcolor=red]
12 [label="(202114491)empty" shape=box style=dashed]
13 [label="(202114561)String(lit(,))" shape=ellipse style=dashed]
14 [label="(202114560)writelines" shape=box style=dashed]
15 [label="(202114535)str.split()[.](Subscript)" shape=ellipse style=dashed]
16 [label="(202114526)startswith" shape=box style=dashed]
17 [label="(202114573)close" shape=box style=dashed color=red fontcolor=red]
18 [label="(202114487)str(line)" shape=ellipse style=dashed]
19 [label="(202114495)String(lit(=))" shape=ellipse style=dashed]
20 [label="(202114474)startswith" shape=box style=dashed]
21 [label="(202114522)str(line)" shape=ellipse style=dashed]
22 [label="(202114477)empty" shape=box style=dashed]
23 [label="(202114529)empty" shape=box style=dashed]
24 [label="(202114564)Union[int, float](i)" shape=ellipse style=dashed]
25 [label="(202114563)GeneratorExp" shape=diamond style=dashed]
26 [label="(202114503)String(lit(auxfile =))" shape=ellipse style=dashed]
27 [label="(202114500)empty" shape=box style=dashed]
28 [label="(202114546)str(case)" shape=ellipse style=dashed]
29 [label="(202114555)List[Union[int, float]](e)" shape=ellipse style=dashed]
30 [label="(202114562)join" shape=box style=dashed]
31 [label="(202114461)=" shape=box style=dashed]
32 [label="(202114541)float(x)" shape=ellipse style=dashed]
33 [label="(202114548)Add" shape=box style=dashed]
34 [label="(202114490)If" shape=diamond style=dashed]
35 [label="(202114515)TextIO(iny)" shape=ellipse style=dashed color=red fontcolor=red]
36 [label="(202114517)str(aux)" shape=ellipse style=dashed]
37 [label="(202114475)String(lit(x =))" shape=ellipse style=dashed]
38 [label="(202114506)str(aux)" shape=ellipse style=dashed]
39 [label="(202114558)empty" shape=box style=dashed]
40 [label="(202114547)String(lit(.csv))" shape=ellipse style=dashed]
41 [label="(202114507)str(line)" shape=ellipse style=dashed]
42 [label="(202114460)(null)" shape=ellipse style=dashed]
43 [label="(202114518)String(lit(r))" shape=ellipse style=dashed color=red fontcolor=red]
44 [label="(202114525)str(line)" shape=ellipse style=dashed]
45 [label="(202114485)=" shape=box style=dashed]
46 [label="(202114569)empty" shape=box style=dashed]
47 [label="(202114536)number(1)" shape=ellipse style=dashed]
48 [label="(202114468)TextIO(inx)" shape=ellipse style=dashed]
49 [label="(202114469)str(line)" shape=ellipse style=dashed]
50 [label="(202114463)TextIO(inx)" shape=ellipse style=dashed color=blue fontcolor=blue]
51 [label="(202114483)str.split()[.](Subscript)" shape=ellipse style=dashed]
52 [label="(202114493)str(line)" shape=ellipse style=dashed]
53 [label="(202114511)number(1)" shape=ellipse style=dashed]
54 [label="(202114556)List[Union[int, float]](e)" shape=ellipse style=dashed]
55 [label="(202114566)comprehension" shape=diamond style=dashed]
56 [label="(202114571)Add" shape=box style=dashed]
57 [label="(202114570)String(lit(
))" shape=ellipse style=dashed]
58 [label="(202114467)=" shape=box style=dashed color=blue fontcolor=blue]
59 [label="(202114473)str(line)" shape=ellipse style=dashed]
60 [label="(202114559)TextIO(outf)" shape=ellipse style=dashed]
61 [label="(202114484)number(1)" shape=ellipse style=dashed]
62 [label="(202114471)For" shape=diamond style=dashed]
63 [label="(202114539)List[List[Union[int, float]]](dat)" shape=ellipse style=dashed]
64 [label="(202114543)=" shape=box style=dashed]
65 [label="(202114492)str(case)" shape=ellipse style=dashed]
66 [label="(202114478)float(x)" shape=ellipse style=dashed]
67 [label="(202114533)split" shape=box style=dashed]
68 [label="(202114550)=" shape=box style=dashed color=red fontcolor=red]
69 [label="(202114574)END" style=dashed]
70 [label="(202114512)strip" shape=box style=dashed]
71 [label="(202114534)String(lit(=))" shape=ellipse style=dashed]
72 [label="(202114544)TextIO(outf)" shape=ellipse style=dashed color=red fontcolor=red]
73 [label="(202114459)Optional[str](xin)" shape=ellipse style=dashed]
74 [label="(202114516)open" shape=box style=dashed color=red fontcolor=red]
75 [label="(202114524)empty" shape=box style=dashed]
76 [label="(202114531)float" shape=box style=dashed]
77 [label="(202114514)empty" shape=box style=dashed]
78 [label="(202114527)String(lit(y =))" shape=ellipse style=dashed]
79 [label="(202114489)String(lit(case =))" shape=ellipse style=dashed]
80 [label="(202114551)TextIO(outf)" shape=ellipse style=dashed]
81 [label="(202114549)String(lit(w))" shape=ellipse style=dashed color=red fontcolor=red]
82 [label="(202114557)For" shape=diamond style=dashed]
83 [label="(202114537)=" shape=box style=dashed]
84 [label="(202114480)str(line)" shape=ellipse style=dashed]
85 [label="(202114476)If" shape=diamond style=dashed]
86 [label="(202114508)split" shape=box style=dashed]
87 [label="(202114486)empty" shape=box style=dashed]
88 [label="(202114520)TextIO(iny)" shape=ellipse style=dashed]
89 [label="(202114481)split" shape=box style=dashed]
90 [label="(202114494)split" shape=box style=dashed]
91 [label="(202114470)str(line)" shape=ellipse style=dashed]
92 [label="(202114458)START" style=dashed]
93 [label="(202114499)=" shape=box style=dashed]
94 [label="(202114523)For" shape=diamond style=dashed]
95 [label="(202114488)startswith" shape=box style=dashed]
96 [label="(202114521)str(line)" shape=ellipse style=dashed]
97 [label="(202114502)startswith" shape=box style=dashed]
98 [label="(202114510)str.split()[.](Subscript)" shape=ellipse style=dashed]
99 [label="(202114552)writelines" shape=box style=dashed]
100 [label="(202114465)Optional[str](xin)" shape=ellipse style=dashed]
101 [label="(202114509)String(lit(=))" shape=ellipse style=dashed]
102 [label="(202114519)=" shape=box style=dashed color=red fontcolor=red]
103 [label="(202114498)strip" shape=box style=dashed]
104 [label="(202114528)If" shape=diamond style=dashed]
105 [label="(202114513)=" shape=box style=dashed]
106 [label="(202114497)number(1)" shape=ellipse style=dashed]
107 [label="(202114504)If" shape=diamond style=dashed]
108 [label="(202114554)List[List[Union[int, float]]](dat)" shape=ellipse style=dashed]
109 [label="(202114565)List[Union[int, float]](e)" shape=ellipse style=dashed]
110 [label="(202114466)String(lit(r))" shape=ellipse style=dashed color=blue fontcolor=blue]
111 [label="(202114479)float" shape=box style=dashed]
112 [label="(202114505)empty" shape=box style=dashed]
113 [label="(202114532)str(line)" shape=ellipse style=dashed]
114 [label="(202114567)str" shape=box style=dashed]
115 [label="(202114482)String(lit(=))" shape=ellipse style=dashed]
116 [label="(202114568)Union[int, float](i)" shape=ellipse style=dashed]
62 -> 1 [label="" style=solid];
92 -> 3 [label="" style=solid];
100 -> 3 [label="para" style=dotted];
110 -> 3 [label="para" style=dotted];
31 -> 3 [label="dep" style=dotted];
90 -> 4 [label="qual" style=dotted];
106 -> 4 [label="para" style=dotted];
49 -> 5 [label="ref" style=dotted];
83 -> 6 [label="def" style=dotted];
92 -> 8 [label="" style=solid];
33 -> 8 [label="dep" style=dotted];
33 -> 8 [label="para" style=dotted];
81 -> 8 [label="para" style=dotted];
64 -> 8 [label="dep" style=dotted];
104 -> 9 [label="F"];
92 -> 10 [label="" style=solid];
32 -> 10 [label="para" style=dotted];
2 -> 10 [label="para" style=dotted];
9 -> 10 [label="dep" style=dotted];
83 -> 10 [label="dep" style=dotted];
72 -> 11 [label="ref" style=dotted];
34 -> 12 [label="T"];
82 -> 14 [label="" style=solid];
60 -> 14 [label="recv" style=dotted];
56 -> 14 [label="dep" style=dotted];
56 -> 14 [label="para" style=dotted];
39 -> 14 [label="dep" style=dotted];
67 -> 15 [label="qual" style=dotted];
47 -> 15 [label="para" style=dotted];
94 -> 16 [label="" style=solid];
44 -> 16 [label="recv" style=dotted];
78 -> 16 [label="para" style=dotted];
75 -> 16 [label="dep" style=dotted];
92 -> 17 [label="" style=solid];
11 -> 17 [label="recv" style=dotted];
14 -> 17 [label="dep" style=dotted];
49 -> 18 [label="ref" style=dotted];
62 -> 20 [label="" style=solid];
59 -> 20 [label="recv" style=dotted];
37 -> 20 [label="para" style=dotted];
1 -> 20 [label="dep" style=dotted];
96 -> 21 [label="ref" style=dotted];
85 -> 22 [label="T"];
104 -> 23 [label="T"];
109 -> 24 [label="def" style=dotted];
82 -> 25 [label="" style=solid];
114 -> 25 [label="dep" style=dotted];
114 -> 25 [label="cond" style=dotted];
46 -> 25 [label="dep" style=dotted];
46 -> 25 [label="para" style=dotted];
34 -> 27 [label="F"];
108 -> 29 [label="def" style=dotted];
82 -> 30 [label="" style=solid];
13 -> 30 [label="recv" style=dotted];
25 -> 30 [label="dep" style=dotted];
25 -> 30 [label="para" style=dotted];
39 -> 30 [label="dep" style=dotted];
92 -> 31 [label="" style=solid];
42 -> 31 [label="para" style=dotted];
92 -> 33 [label="" style=solid];
28 -> 33 [label="para" style=dotted];
40 -> 33 [label="para" style=dotted];
64 -> 33 [label="dep" style=dotted];
85 -> 34 [label="F"];
95 -> 34 [label="dep" style=dotted];
95 -> 34 [label="cond" style=dotted];
102 -> 35 [label="def" style=dotted];
105 -> 38 [label="def" style=dotted];
82 -> 39 [label="" style=solid];
49 -> 41 [label="ref" style=dotted];
96 -> 44 [label="ref" style=dotted];
85 -> 45 [label="T"];
111 -> 45 [label="dep" style=dotted];
111 -> 45 [label="para" style=dotted];
55 -> 46 [label="" style=solid];
50 -> 48 [label="ref" style=dotted];
48 -> 49 [label="def" style=dotted];
58 -> 50 [label="def" style=dotted];
89 -> 51 [label="qual" style=dotted];
61 -> 51 [label="para" style=dotted];
49 -> 52 [label="ref" style=dotted];
29 -> 54 [label="ref" style=dotted];
82 -> 55 [label="" style=solid];
24 -> 55 [label="cond" style=dotted];
39 -> 55 [label="dep" style=dotted];
82 -> 56 [label="" style=solid];
30 -> 56 [label="dep" style=dotted];
30 -> 56 [label="para" style=dotted];
57 -> 56 [label="para" style=dotted];
39 -> 56 [label="dep" style=dotted];
92 -> 58 [label="" style=solid];
3 -> 58 [label="dep" style=dotted];
3 -> 58 [label="para" style=dotted];
49 -> 59 [label="ref" style=dotted];
72 -> 60 [label="ref" style=dotted];
92 -> 62 [label="" style=solid];
91 -> 62 [label="cond" style=dotted];
58 -> 62 [label="dep" style=dotted];
64 -> 63 [label="def" style=dotted];
92 -> 64 [label="" style=solid];
10 -> 64 [label="dep" style=dotted];
10 -> 64 [label="para" style=dotted];
93 -> 65 [label="def" style=dotted];
45 -> 66 [label="def" style=dotted];
104 -> 67 [label="T"];
113 -> 67 [label="recv" style=dotted];
71 -> 67 [label="para" style=dotted];
23 -> 67 [label="dep" style=dotted];
92 -> 68 [label="" style=solid];
8 -> 68 [label="dep" style=dotted];
8 -> 68 [label="para" style=dotted];
17 -> 69 [label="dep" style=dotted];
107 -> 70 [label="T"];
98 -> 70 [label="recv" style=dotted];
68 -> 72 [label="def" style=dotted];
31 -> 73 [label="def" style=dotted];
92 -> 74 [label="" style=solid];
36 -> 74 [label="para" style=dotted];
43 -> 74 [label="para" style=dotted];
45 -> 74 [label="dep" style=dotted];
77 -> 74 [label="dep" style=dotted];
105 -> 74 [label="dep" style=dotted];
93 -> 74 [label="dep" style=dotted];
94 -> 75 [label="" style=solid];
104 -> 76 [label="T"];
15 -> 76 [label="para" style=dotted];
23 -> 76 [label="dep" style=dotted];
107 -> 77 [label="F"];
72 -> 80 [label="ref" style=dotted];
92 -> 82 [label="" style=solid];
54 -> 82 [label="cond" style=dotted];
99 -> 82 [label="dep" style=dotted];
104 -> 83 [label="T"];
76 -> 83 [label="dep" style=dotted];
76 -> 83 [label="para" style=dotted];
49 -> 84 [label="ref" style=dotted];
62 -> 85 [label="" style=solid];
20 -> 85 [label="dep" style=dotted];
20 -> 85 [label="cond" style=dotted];
107 -> 86 [label="T"];
41 -> 86 [label="recv" style=dotted];
101 -> 86 [label="para" style=dotted];
112 -> 86 [label="dep" style=dotted];
85 -> 87 [label="F"];
35 -> 88 [label="ref" style=dotted];
85 -> 89 [label="T"];
84 -> 89 [label="recv" style=dotted];
115 -> 89 [label="para" style=dotted];
22 -> 89 [label="dep" style=dotted];
34 -> 90 [label="T"];
52 -> 90 [label="recv" style=dotted];
19 -> 90 [label="para" style=dotted];
12 -> 90 [label="dep" style=dotted];
49 -> 91 [label="ref" style=dotted];
34 -> 93 [label="T"];
103 -> 93 [label="dep" style=dotted];
103 -> 93 [label="para" style=dotted];
92 -> 94 [label="" style=solid];
21 -> 94 [label="cond" style=dotted];
102 -> 94 [label="dep" style=dotted];
85 -> 95 [label="F"];
18 -> 95 [label="recv" style=dotted];
79 -> 95 [label="para" style=dotted];
87 -> 95 [label="dep" style=dotted];
88 -> 96 [label="def" style=dotted];
34 -> 97 [label="F"];
5 -> 97 [label="recv" style=dotted];
26 -> 97 [label="para" style=dotted];
27 -> 97 [label="dep" style=dotted];
86 -> 98 [label="qual" style=dotted];
53 -> 98 [label="para" style=dotted];
92 -> 99 [label="" style=solid];
80 -> 99 [label="recv" style=dotted];
7 -> 99 [label="para" style=dotted];
68 -> 99 [label="dep" style=dotted];
92 -> 102 [label="" style=solid];
74 -> 102 [label="dep" style=dotted];
74 -> 102 [label="para" style=dotted];
34 -> 103 [label="T"];
4 -> 103 [label="recv" style=dotted];
94 -> 104 [label="" style=solid];
16 -> 104 [label="dep" style=dotted];
16 -> 104 [label="cond" style=dotted];
107 -> 105 [label="T"];
70 -> 105 [label="dep" style=dotted];
70 -> 105 [label="para" style=dotted];
34 -> 107 [label="F"];
97 -> 107 [label="dep" style=dotted];
97 -> 107 [label="cond" style=dotted];
63 -> 108 [label="ref" style=dotted];
29 -> 109 [label="ref" style=dotted];
85 -> 111 [label="T"];
51 -> 111 [label="para" style=dotted];
22 -> 111 [label="dep" style=dotted];
107 -> 112 [label="T"];
96 -> 113 [label="ref" style=dotted];
82 -> 114 [label="" style=solid];
116 -> 114 [label="para" style=dotted];
55 -> 114 [label="dep" style=dotted];
24 -> 116 [label="ref" style=dotted];
}