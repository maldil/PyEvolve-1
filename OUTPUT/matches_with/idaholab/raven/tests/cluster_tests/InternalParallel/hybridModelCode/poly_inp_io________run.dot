digraph G {
1 [label="(202156150)empty" shape=box style=dashed]
2 [label="(202156166)float(y)" shape=ellipse style=dashed]
3 [label="(202156109)str(line)" shape=ellipse style=dashed]
4 [label="(202156125)String(lit(case =))" shape=ellipse style=dashed]
5 [label="(202156157)str(line)" shape=ellipse style=dashed]
6 [label="(202156155)=" shape=box style=dashed color=red fontcolor=red]
7 [label="(202156172)number(1)" shape=ellipse style=dashed]
8 [label="(202156194)empty" shape=box style=dashed]
9 [label="(202156158)str(line)" shape=ellipse style=dashed]
10 [label="(202156129)str(line)" shape=ellipse style=dashed]
11 [label="(202156103)=" shape=box style=dashed color=blue fontcolor=blue]
12 [label="(202156167)float" shape=box style=dashed]
13 [label="(202156126)If" shape=diamond style=dashed]
14 [label="(202156136)empty" shape=box style=dashed]
15 [label="(202156102)String(lit(r))" shape=ellipse style=dashed color=blue fontcolor=blue]
16 [label="(202156108)empty" shape=box style=dashed]
17 [label="(202156100)open" shape=box style=dashed color=blue fontcolor=blue]
18 [label="(202156123)str(line)" shape=ellipse style=dashed]
19 [label="(202156141)empty" shape=box style=dashed]
20 [label="(202156178)float(y)" shape=ellipse style=dashed]
21 [label="(202156174)empty" shape=box style=dashed]
22 [label="(202156095)Optional[str](xin)" shape=ellipse style=dashed]
23 [label="(202156203)str" shape=box style=dashed]
24 [label="(202156198)join" shape=box style=dashed]
25 [label="(202156171)str.split()[.](Subscript)" shape=ellipse style=dashed]
26 [label="(202156137)str(line)" shape=ellipse style=dashed]
27 [label="(202156111)String(lit(x =))" shape=ellipse style=dashed]
28 [label="(202156176)eval" shape=box style=dashed]
29 [label="(202156181)open" shape=box style=dashed color=red fontcolor=red]
30 [label="(202156186)=" shape=box style=dashed color=red fontcolor=red]
31 [label="(202156104)TextIO(inx)" shape=ellipse style=dashed]
32 [label="(202156121)=" shape=box style=dashed]
33 [label="(202156156)TextIO(iny)" shape=ellipse style=dashed]
34 [label="(202156110)startswith" shape=box style=dashed]
35 [label="(202156169)split" shape=box style=dashed]
36 [label="(202156182)str(case)" shape=ellipse style=dashed]
37 [label="(202156188)writelines" shape=box style=dashed]
38 [label="(202156173)=" shape=box style=dashed]
39 [label="(202156096)(null)" shape=ellipse style=dashed]
40 [label="(202156149)=" shape=box style=dashed]
41 [label="(202156190)List[List[Union[int, float]]](dat)" shape=ellipse style=dashed]
42 [label="(202156117)split" shape=box style=dashed]
43 [label="(202156183)String(lit(.csv))" shape=ellipse style=dashed]
44 [label="(202156208)TextIO(outf)" shape=ellipse style=dashed color=red fontcolor=red]
45 [label="(202156175)List[List[Union[int, float]]](dat)" shape=ellipse style=dashed]
46 [label="(202156133)number(1)" shape=ellipse style=dashed]
47 [label="(202156097)=" shape=box style=dashed]
48 [label="(202156146)str.split()[.](Subscript)" shape=ellipse style=dashed]
49 [label="(202156207)Add" shape=box style=dashed]
50 [label="(202156204)Union[int, float](i)" shape=ellipse style=dashed]
51 [label="(202156112)If" shape=diamond style=dashed]
52 [label="(202156105)str(line)" shape=ellipse style=dashed]
53 [label="(202156177)float(x)" shape=ellipse style=dashed]
54 [label="(202156151)TextIO(iny)" shape=ellipse style=dashed color=red fontcolor=red]
55 [label="(202156116)str(line)" shape=ellipse style=dashed]
56 [label="(202156162)startswith" shape=box style=dashed]
57 [label="(202156142)str(aux)" shape=ellipse style=dashed]
58 [label="(202156187)TextIO(outf)" shape=ellipse style=dashed]
59 [label="(202156209)close" shape=box style=dashed color=red fontcolor=red]
60 [label="(202156131)String(lit(=))" shape=ellipse style=dashed]
61 [label="(202156124)startswith" shape=box style=dashed]
62 [label="(202156154)String(lit(r))" shape=ellipse style=dashed color=red fontcolor=red]
63 [label="(202156168)str(line)" shape=ellipse style=dashed]
64 [label="(202156179)=" shape=box style=dashed]
65 [label="(202156191)List[Union[int, float]](e)" shape=ellipse style=dashed]
66 [label="(202156128)str(case)" shape=ellipse style=dashed]
67 [label="(202156163)String(lit(y =))" shape=ellipse style=dashed]
68 [label="(202156132)str.split()[.](Subscript)" shape=ellipse style=dashed]
69 [label="(202156206)String(lit(
))" shape=ellipse style=dashed]
70 [label="(202156140)If" shape=diamond style=dashed]
71 [label="(202156115)float" shape=box style=dashed]
72 [label="(202156099)TextIO(inx)" shape=ellipse style=dashed color=blue fontcolor=blue]
73 [label="(202156114)float(x)" shape=ellipse style=dashed]
74 [label="(202156127)empty" shape=box style=dashed]
75 [label="(202156164)If" shape=diamond style=dashed]
76 [label="(202156193)For" shape=diamond style=dashed]
77 [label="(202156196)writelines" shape=box style=dashed]
78 [label="(202156200)Union[int, float](i)" shape=ellipse style=dashed]
79 [label="(202156170)String(lit(=))" shape=ellipse style=dashed]
80 [label="(202156094)START" style=dashed]
81 [label="(202156160)empty" shape=box style=dashed]
82 [label="(202156101)Optional[str](xin)" shape=ellipse style=dashed]
83 [label="(202156152)open" shape=box style=dashed color=red fontcolor=red]
84 [label="(202156122)empty" shape=box style=dashed]
85 [label="(202156134)strip" shape=box style=dashed]
86 [label="(202156180)TextIO(outf)" shape=ellipse style=dashed color=red fontcolor=red]
87 [label="(202156161)str(line)" shape=ellipse style=dashed]
88 [label="(202156119)str.split()[.](Subscript)" shape=ellipse style=dashed]
89 [label="(202156113)empty" shape=box style=dashed]
90 [label="(202156143)str(line)" shape=ellipse style=dashed]
91 [label="(202156138)startswith" shape=box style=dashed]
92 [label="(202156118)String(lit(=))" shape=ellipse style=dashed]
93 [label="(202156120)number(1)" shape=ellipse style=dashed]
94 [label="(202156165)empty" shape=box style=dashed]
95 [label="(202156197)String(lit(,))" shape=ellipse style=dashed]
96 [label="(202156192)List[Union[int, float]](e)" shape=ellipse style=dashed]
97 [label="(202156130)split" shape=box style=dashed]
98 [label="(202156147)number(1)" shape=ellipse style=dashed]
99 [label="(202156199)GeneratorExp" shape=diamond style=dashed]
100 [label="(202156139)String(lit(auxfile =))" shape=ellipse style=dashed]
101 [label="(202156195)TextIO(outf)" shape=ellipse style=dashed]
102 [label="(202156153)str(aux)" shape=ellipse style=dashed]
103 [label="(202156189)String(lit(step,i,j,x,y,poly
))" shape=ellipse style=dashed]
104 [label="(202156135)=" shape=box style=dashed]
105 [label="(202156144)split" shape=box style=dashed]
106 [label="(202156148)strip" shape=box style=dashed]
107 [label="(202156145)String(lit(=))" shape=ellipse style=dashed]
108 [label="(202156205)empty" shape=box style=dashed]
109 [label="(202156210)END" style=dashed]
110 [label="(202156202)comprehension" shape=diamond style=dashed]
111 [label="(202156106)str(line)" shape=ellipse style=dashed]
112 [label="(202156107)For" shape=diamond style=dashed]
113 [label="(202156159)For" shape=diamond style=dashed]
114 [label="(202156201)List[Union[int, float]](e)" shape=ellipse style=dashed]
115 [label="(202156185)String(lit(w))" shape=ellipse style=dashed color=red fontcolor=red]
116 [label="(202156184)Add" shape=box style=dashed]
70 -> 1 [label="F"];
38 -> 2 [label="def" style=dotted];
52 -> 3 [label="ref" style=dotted];
33 -> 5 [label="def" style=dotted];
80 -> 6 [label="" style=solid];
83 -> 6 [label="dep" style=dotted];
83 -> 6 [label="para" style=dotted];
76 -> 8 [label="" style=solid];
5 -> 9 [label="ref" style=dotted];
52 -> 10 [label="ref" style=dotted];
80 -> 11 [label="" style=solid];
17 -> 11 [label="dep" style=dotted];
17 -> 11 [label="para" style=dotted];
75 -> 12 [label="T"];
25 -> 12 [label="para" style=dotted];
94 -> 12 [label="dep" style=dotted];
51 -> 13 [label="F"];
61 -> 13 [label="dep" style=dotted];
61 -> 13 [label="cond" style=dotted];
13 -> 14 [label="F"];
112 -> 16 [label="" style=solid];
80 -> 17 [label="" style=solid];
82 -> 17 [label="para" style=dotted];
15 -> 17 [label="para" style=dotted];
47 -> 17 [label="dep" style=dotted];
52 -> 18 [label="ref" style=dotted];
70 -> 19 [label="T"];
75 -> 21 [label="F"];
47 -> 22 [label="def" style=dotted];
76 -> 23 [label="" style=solid];
50 -> 23 [label="para" style=dotted];
110 -> 23 [label="dep" style=dotted];
76 -> 24 [label="" style=solid];
95 -> 24 [label="recv" style=dotted];
99 -> 24 [label="dep" style=dotted];
99 -> 24 [label="para" style=dotted];
8 -> 24 [label="dep" style=dotted];
35 -> 25 [label="qual" style=dotted];
7 -> 25 [label="para" style=dotted];
52 -> 26 [label="ref" style=dotted];
80 -> 28 [label="" style=solid];
53 -> 28 [label="para" style=dotted];
20 -> 28 [label="para" style=dotted];
38 -> 28 [label="dep" style=dotted];
21 -> 28 [label="dep" style=dotted];
80 -> 29 [label="" style=solid];
116 -> 29 [label="dep" style=dotted];
116 -> 29 [label="para" style=dotted];
115 -> 29 [label="para" style=dotted];
64 -> 29 [label="dep" style=dotted];
80 -> 30 [label="" style=solid];
29 -> 30 [label="dep" style=dotted];
29 -> 30 [label="para" style=dotted];
72 -> 31 [label="ref" style=dotted];
51 -> 32 [label="T"];
71 -> 32 [label="dep" style=dotted];
71 -> 32 [label="para" style=dotted];
54 -> 33 [label="ref" style=dotted];
112 -> 34 [label="" style=solid];
3 -> 34 [label="recv" style=dotted];
27 -> 34 [label="para" style=dotted];
16 -> 34 [label="dep" style=dotted];
75 -> 35 [label="T"];
63 -> 35 [label="recv" style=dotted];
79 -> 35 [label="para" style=dotted];
94 -> 35 [label="dep" style=dotted];
80 -> 37 [label="" style=solid];
58 -> 37 [label="recv" style=dotted];
103 -> 37 [label="para" style=dotted];
30 -> 37 [label="dep" style=dotted];
75 -> 38 [label="T"];
12 -> 38 [label="dep" style=dotted];
12 -> 38 [label="para" style=dotted];
70 -> 40 [label="T"];
106 -> 40 [label="dep" style=dotted];
106 -> 40 [label="para" style=dotted];
45 -> 41 [label="ref" style=dotted];
51 -> 42 [label="T"];
55 -> 42 [label="recv" style=dotted];
92 -> 42 [label="para" style=dotted];
89 -> 42 [label="dep" style=dotted];
86 -> 44 [label="ref" style=dotted];
64 -> 45 [label="def" style=dotted];
80 -> 47 [label="" style=solid];
39 -> 47 [label="para" style=dotted];
105 -> 48 [label="qual" style=dotted];
98 -> 48 [label="para" style=dotted];
76 -> 49 [label="" style=solid];
24 -> 49 [label="dep" style=dotted];
24 -> 49 [label="para" style=dotted];
69 -> 49 [label="para" style=dotted];
8 -> 49 [label="dep" style=dotted];
78 -> 50 [label="ref" style=dotted];
112 -> 51 [label="" style=solid];
34 -> 51 [label="dep" style=dotted];
34 -> 51 [label="cond" style=dotted];
31 -> 52 [label="def" style=dotted];
6 -> 54 [label="def" style=dotted];
52 -> 55 [label="ref" style=dotted];
113 -> 56 [label="" style=solid];
87 -> 56 [label="recv" style=dotted];
67 -> 56 [label="para" style=dotted];
81 -> 56 [label="dep" style=dotted];
40 -> 57 [label="def" style=dotted];
86 -> 58 [label="ref" style=dotted];
80 -> 59 [label="" style=solid];
44 -> 59 [label="recv" style=dotted];
77 -> 59 [label="dep" style=dotted];
51 -> 61 [label="F"];
18 -> 61 [label="recv" style=dotted];
4 -> 61 [label="para" style=dotted];
84 -> 61 [label="dep" style=dotted];
5 -> 63 [label="ref" style=dotted];
80 -> 64 [label="" style=solid];
28 -> 64 [label="dep" style=dotted];
28 -> 64 [label="para" style=dotted];
41 -> 65 [label="def" style=dotted];
104 -> 66 [label="def" style=dotted];
97 -> 68 [label="qual" style=dotted];
46 -> 68 [label="para" style=dotted];
13 -> 70 [label="F"];
91 -> 70 [label="dep" style=dotted];
91 -> 70 [label="cond" style=dotted];
51 -> 71 [label="T"];
88 -> 71 [label="para" style=dotted];
89 -> 71 [label="dep" style=dotted];
11 -> 72 [label="def" style=dotted];
32 -> 73 [label="def" style=dotted];
13 -> 74 [label="T"];
113 -> 75 [label="" style=solid];
56 -> 75 [label="dep" style=dotted];
56 -> 75 [label="cond" style=dotted];
80 -> 76 [label="" style=solid];
96 -> 76 [label="cond" style=dotted];
37 -> 76 [label="dep" style=dotted];
76 -> 77 [label="" style=solid];
101 -> 77 [label="recv" style=dotted];
49 -> 77 [label="dep" style=dotted];
49 -> 77 [label="para" style=dotted];
8 -> 77 [label="dep" style=dotted];
114 -> 78 [label="def" style=dotted];
113 -> 81 [label="" style=solid];
80 -> 83 [label="" style=solid];
102 -> 83 [label="para" style=dotted];
62 -> 83 [label="para" style=dotted];
1 -> 83 [label="dep" style=dotted];
32 -> 83 [label="dep" style=dotted];
40 -> 83 [label="dep" style=dotted];
104 -> 83 [label="dep" style=dotted];
51 -> 84 [label="F"];
13 -> 85 [label="T"];
68 -> 85 [label="recv" style=dotted];
30 -> 86 [label="def" style=dotted];
5 -> 87 [label="ref" style=dotted];
42 -> 88 [label="qual" style=dotted];
93 -> 88 [label="para" style=dotted];
51 -> 89 [label="T"];
52 -> 90 [label="ref" style=dotted];
13 -> 91 [label="F"];
26 -> 91 [label="recv" style=dotted];
100 -> 91 [label="para" style=dotted];
14 -> 91 [label="dep" style=dotted];
75 -> 94 [label="T"];
65 -> 96 [label="ref" style=dotted];
13 -> 97 [label="T"];
10 -> 97 [label="recv" style=dotted];
60 -> 97 [label="para" style=dotted];
74 -> 97 [label="dep" style=dotted];
76 -> 99 [label="" style=solid];
23 -> 99 [label="dep" style=dotted];
23 -> 99 [label="cond" style=dotted];
108 -> 99 [label="dep" style=dotted];
108 -> 99 [label="para" style=dotted];
86 -> 101 [label="ref" style=dotted];
13 -> 104 [label="T"];
85 -> 104 [label="dep" style=dotted];
85 -> 104 [label="para" style=dotted];
70 -> 105 [label="T"];
90 -> 105 [label="recv" style=dotted];
107 -> 105 [label="para" style=dotted];
19 -> 105 [label="dep" style=dotted];
70 -> 106 [label="T"];
48 -> 106 [label="recv" style=dotted];
110 -> 108 [label="" style=solid];
59 -> 109 [label="dep" style=dotted];
76 -> 110 [label="" style=solid];
78 -> 110 [label="cond" style=dotted];
8 -> 110 [label="dep" style=dotted];
52 -> 111 [label="ref" style=dotted];
80 -> 112 [label="" style=solid];
111 -> 112 [label="cond" style=dotted];
11 -> 112 [label="dep" style=dotted];
80 -> 113 [label="" style=solid];
9 -> 113 [label="cond" style=dotted];
6 -> 113 [label="dep" style=dotted];
65 -> 114 [label="ref" style=dotted];
80 -> 116 [label="" style=solid];
36 -> 116 [label="para" style=dotted];
43 -> 116 [label="para" style=dotted];
64 -> 116 [label="dep" style=dotted];
}